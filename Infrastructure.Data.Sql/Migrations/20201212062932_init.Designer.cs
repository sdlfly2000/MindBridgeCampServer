// <auto-generated />
using System;
using Infrastructure.Data.Sql;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Infrastructure.Data.Sql.Migrations
{
    [DbContext(typeof(MindBridgeCampDbContext))]
    [Migration("20201212062932_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Infrastructure.Data.Sql.User.Entities.HobbyEntity", b =>
                {
                    b.Property<Guid>("hobbyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("UserEntityuserId")
                        .HasColumnType("char(36)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("hobbyId");

                    b.HasIndex("UserEntityuserId");

                    b.ToTable("HobbyEntity");
                });

            modelBuilder.Entity("Infrastructure.Data.Sql.User.Entities.UserEntity", b =>
                {
                    b.Property<Guid>("userId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("expectationAfterGraduation")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int?>("gender")
                        .HasColumnType("int");

                    b.Property<int?>("height")
                        .HasColumnType("int");

                    b.Property<string>("majorIn")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("studyContent")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int?>("weight")
                        .HasColumnType("int");

                    b.HasKey("userId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Infrastructure.Data.Sql.User.Entities.UserInfoEntity", b =>
                {
                    b.Property<Guid>("openId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("avatarUrl")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("city")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("country")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("language")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("nickName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("province")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("openId");

                    b.ToTable("UserInfos");
                });

            modelBuilder.Entity("Infrastructure.Data.Sql.User.Entities.HobbyEntity", b =>
                {
                    b.HasOne("Infrastructure.Data.Sql.User.Entities.UserEntity", null)
                        .WithMany("hobbies")
                        .HasForeignKey("UserEntityuserId");
                });
#pragma warning restore 612, 618
        }
    }
}
